# -*- coding: utf-8 -*-
"""ocean analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dad2rmTk052N0YLovyZiwPLv5IbYJyMs

##Exploratory Data Analysis (EDA) on Tsunami dataset
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import matplotlib  as mlp

# %matplotlib inline

df1 = pd.read_csv('/content/drive/My Drive/oceans/ocean1.csv')
df2  = pd.read_csv('/content/drive/My Drive/oceans/ocean2.csv')

df2.shape

print(df1.columns)
print(df2.columns)

del df1

df2.head()

locs = df2['location']

df2 = df2.drop(['x','y','location','data_url','objectid'],axis=1)
df2.sample(1)

df = df2

df.head(1)

df.isna().any()

df[df['deploy_date'].isna()]

"""Dropping the null records"""

df.drop([28,43]).shape

import re
locations = df['description']

"""###Extracting countries,cities from the 'description' column"""

cities=[]
for x in locations:
  y = re.split('of',x)
  cities.append(y[-1])
country=[]
for x in locations:
  y = re.split(',',x)
  country.append(y[-1])

df['country'] = country
df['city'] = cities

df.head()

df = df.drop(['description'],axis=1)

df.isna().any()

df = df.drop([28,43])

df.isna().any()

ncity=[]
for x in df['city'].tolist():
  y = re.split(',',x)
  ncity.append(y[0])

df['city'] = ncity

df.head()

df['year']=df['deploy_date'][4][:4]

"""##Now the data is ready for Visualization/Story telling"""

df.head()

"""##Analyzing which countries have suffered more tsunamis"""

df.groupby(df.country)['country'].count().sort_values(ascending=False).head(15).plot(kind='pie',figsize=(15,10),
                                                                                     title="Countrywise tsunamis")
plt.show()

"""##A BarPlot to check the number of tsunamis"""

df.groupby(df.country)['country'].count().sort_values(ascending=False).head(15).plot(kind='bar',figsize=(15,10),
                                                                                     title="Countrywise tsunamis")

"""##We will dive deeper to check which country has seen the deepest tsunami"""

df_sorted_by_depths = df.sort_values(by='depth',ascending=False)

sns.pointplot(x=df_sorted_by_depths['country'].head(5)
              ,y=df_sorted_by_depths['depth']
              ,data=df_sorted_by_depths)

sns.set(rc={'figure.figsize':(15,15)})

df[df.depth==max(df.depth)]['country']

"""##Phillipines has seen the deepest tsunamis' of them all"""

dir(sns)

"""##Visulaizing which city in US saw the deepest tsunami"""

sns.pointplot(x=df.loc[df.country==' USA']['city'],y=df.depth,data=df,fit_reg=False)

"""##Analyzing which city is most prone to be affected by tsunamis'"""

sns.scatterplot(x='latitude',y='longitude',data=df,hue=df.city)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)

df['city'].value_counts().head(5)

"""------------------------------------------------------------------------------------------END--------------------------------------------------------------------"""

